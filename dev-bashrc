RED="\[\033[0;31m\]"
YELLOW="\[\033[0;33m\]"
GREEN="\[\033[1;32m\]"
ORANGE="\[\033[1;31m\]"
LIGHT_GREEN="\[\033[0;32m\]"
BLUE="\[\033[0;34m\]"
PINK="\[\033[0;35m\]"
LIGHT_BLUE="\[\033[1;36m\]"
THIN_BLUE="\[\033[0;36m\]"
LIGHT_RED="\[\033[1;31m\]"
WHITE="\[\033[1;37m\]"
LIGHT_GRAY="\[\033[0;37m\]"
COLOR_NONE="\[\e[0m\]"

function parse_git_branch {

  git rev-parse --git-dir &> /dev/null
    git_status="$(git status 2> /dev/null)"
    branch_pattern="On branch ([^${IFS}]*)"
    remote_pattern="Your branch is (.*) of"
    diverge_pattern="Your branch and (.*) have diverged"

    state=""
    if [[ ! ${git_status} == *"clean" ]]; then
      state="${YELLOW}"
        fi
# add an else if or two here if you want to get more specific
        if [[ ${git_status} =~ ${remote_pattern} ]]; then
          if [[ ${BASH_REMATCH[1]} == "ahead" ]]; then
            remote="${YELLOW}^"
          else
            remote="${YELLOW}v"
              fi
              fi
              if [[ ${git_status} =~ ${diverge_pattern} ]]; then
                remote="${YELLOW}^v"
                  fi
                  if [[ ${git_status} =~ ${branch_pattern} ]]; then
                    branch=${BASH_REMATCH[1]}
  echo " (${branch})${remote}${state}"
    fi
}

function prompt_func() {
  previous_return_value=$?;
  if [[ -z "$SSH_CLIENT" ]]; then
    prompt="${TITLEBAR}${LIGHT_GREEN}[${LIGHT_BLUE}\W${LIGHT_GREEN}$(parse_git_branch)${LIGHT_GREEN}]${COLOR_NONE}"
  else
    prompt="${TITLEBAR}${YELLOW}[${YELLOW}\w${PINK}$(parse_git_branch)${YELLOW}]${COLOR_NONE}"
      fi
      if test $previous_return_value -eq 0
        then
          PS1="${prompt}➔ "
      else
        PS1="${prompt}${LIGHT_RED}➔${COLOR_NONE} "
          fi
}

PROMPT_COMMAND=prompt_func

cd /opt/site
